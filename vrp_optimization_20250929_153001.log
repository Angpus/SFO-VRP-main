Logging to file: vrp_optimization_20250929_153001.log (steps)
Output file set: sailfish_vrp_SF1_S2_20250929_153001.txt
================================================================================
SAILFISH VRP OPTIMIZATION - ITERATION 0
================================================================================

================================================================================
1. INITIAL VARIABLES AND VRP DATA
================================================================================
Initial Parameters:
- Problem size: 18 customers
- Sailfish population: 1
- Sardine population: 2
- Maximum iterations: 7
- Parameter A: 4.0
- Epsilon: 0.001

VRP Problem Data:
==================================================
Max Capacity: 100.0
Max Vehicles: 3
Number of Customers: 18

Depot: ID=0, X=30.0, Y=40.0, Demand=0.0

Customers:
ID   X      Y      Demand  
------------------------------
1    69.0   77.0   7.0     
2    49.0   48.0   10.0    
3    77.0   73.0   23.0    
4    64.0   52.0   16.0    
5    47.0   24.0   19.0    
6    55.0   70.0   7.0     
7    26.0   41.0   11.0    
8    57.0   29.0   7.0     
9    68.0   29.0   24.0    
10   65.0   29.0   7.0     
11   69.0   76.0   9.0     
12   47.0   71.0   6.0     
13   20.0   68.0   35.0    
14   61.0   78.0   26.0    
15   63.0   63.0   32.0    
16   54.0   53.0   31.0    
17   36.0   21.0   7.0     
18   48.0   37.0   23.0    

================================================================================
2. RANDOM SAILFISH AND SARDINES
================================================================================
SAILFISH Random Values:
ID      C 1   C 2   C 3   C 4   C 5   C 6   C 7   C 8   C 9   C10   C11   C12   C13   C14   C15   C16   C17   C18   
SF1     0.657 0.767 0.771 0.057 0.481 0.762 0.911 0.714 0.203 0.049 0.615 0.144 0.583 0.845 0.767 0.472 0.188 0.774 

SARDINE Random Values:
ID      C 1   C 2   C 3   C 4   C 5   C 6   C 7   C 8   C 9   C10   C11   C12   C13   C14   C15   C16   C17   C18   
S1      0.889 0.549 0.371 0.795 0.837 0.524 0.012 0.764 0.134 0.815 0.514 0.121 0.149 0.805 0.251 0.914 0.316 0.249 
S2      0.800 0.200 0.599 0.478 0.161 0.796 0.371 0.708 0.028 0.200 0.969 0.573 0.561 0.078 0.087 0.166 0.437 0.184 

================================================================================
3. ROUTES FOR EACH SAILFISH AND SARDINE
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.657, 0.767, 0.771, 0.057, 0.481, 0.762, 0.911, 0.714, 0.203, 0.049, 0.615, 0.144, 0.583, 0.845, 0.767, 0.472, 0.188, 0.774]
Routes (with depot returns): Route1: 0-10-4-12-17-9-16-0  Route2: 0-5-13-11-1-8-6-2-0  Route3: 0-15-3-18-0  
Route1 demand: 91.0/100.0
Route2 demand: 94.0/100.0
Route3 demand: 78.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

===== S2 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

================================================================================
4. FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 605.933 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507
S2: 516.990 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 605.933
Best Sardine Fitness: 516.990
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
5. COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.657', '0.767', '0.771', '0.057', '0.481', '0.762', '0.911', '0.714', '0.203', '0.049', '0.615', '0.144', '0.583', '0.845', '0.767', '0.472', '0.188', '0.774'] [[10, 4, 12, 17, 9, 16], [5, 13, 11, 1, 8, 6, 2], [15, 3, 18]] 605.933   
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   
S2   ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯

Best Solution: 516.990
================================================================================
ITERATION 1
================================================================================
Population Decline (PD) = 1 - (1 / 3) = 0.666667

Lambda Calculations:
SF1: λ_1 = (2 × 0.67 × 0.666667) - 0.666667 = 0.226667
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 605.933
Injured Sardine Fitness: 516.990
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was not replaced, using original sorted position

Updating SF1:
  Pos[1]: 605.933 - 0.226667 × ((0.296 × 561.461) - 0.657) = 568.411
  Pos[2]: 605.933 - 0.226667 × ((0.095 × 561.461) - 0.767) = 594.016
  Pos[3]: 605.933 - 0.226667 × ((0.544 × 561.461) - 0.771) = 536.875
  Pos[4]: 605.933 - 0.226667 × ((0.514 × 561.461) - 0.057) = 540.531
  Pos[5]: 605.933 - 0.226667 × ((0.207 × 561.461) - 0.481) = 579.698
  Pos[6]: 605.933 - 0.226667 × ((0.856 × 561.461) - 0.762) = 497.167
  Pos[7]: 605.933 - 0.226667 × ((0.234 × 561.461) - 0.911) = 576.359
  Pos[8]: 605.933 - 0.226667 × ((0.436 × 561.461) - 0.714) = 550.607
  Pos[9]: 605.933 - 0.226667 × ((0.160 × 561.461) - 0.203) = 585.616
  Pos[10]: 605.933 - 0.226667 × ((0.900 × 561.461) - 0.049) = 491.406
  Pos[11]: 605.933 - 0.226667 × ((0.173 × 561.461) - 0.615) = 584.055
  Pos[12]: 605.933 - 0.226667 × ((0.689 × 561.461) - 0.144) = 518.280
  Pos[13]: 605.933 - 0.226667 × ((0.130 × 561.461) - 0.583) = 589.520
  Pos[14]: 605.933 - 0.226667 × ((0.403 × 561.461) - 0.845) = 554.836
  Pos[15]: 605.933 - 0.226667 × ((0.146 × 561.461) - 0.767) = 587.526
  Pos[16]: 605.933 - 0.226667 × ((0.907 × 561.461) - 0.472) = 490.611
  Pos[17]: 605.933 - 0.226667 × ((0.540 × 561.461) - 0.188) = 537.252
  Pos[18]: 605.933 - 0.226667 × ((0.881 × 561.461) - 0.774) = 493.988
New position: ['568.411', '594.016', '536.875', '540.531', '579.698', '497.167', '576.359', '550.607', '585.616', '491.406', '584.055', '518.280', '589.520', '554.836', '587.526', '490.611', '537.252', '493.988']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 605.933
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.020 × (605.933 - 0.800 + 2.000000) = 12.143
  Pos[2]: 0.168 × (605.933 - 0.200 + 2.000000) = 102.099
  Pos[3]: 0.665 × (605.933 - 0.599 + 2.000000) = 403.877
  Pos[4]: 0.292 × (605.933 - 0.478 + 2.000000) = 177.377
  Pos[5]: 0.527 × (605.933 - 0.161 + 2.000000) = 320.296
  Pos[6]: 0.081 × (605.933 - 0.796 + 2.000000) = 49.178
  Pos[7]: 0.052 × (605.933 - 0.371 + 2.000000) = 31.593
  Pos[8]: 0.545 × (605.933 - 0.708 + 2.000000) = 330.937
  Pos[9]: 0.024 × (605.933 - 0.028 + 2.000000) = 14.590
  Pos[10]: 0.458 × (605.933 - 0.200 + 2.000000) = 278.341
  Pos[11]: 0.385 × (605.933 - 0.969 + 2.000000) = 233.681
  Pos[12]: 0.220 × (605.933 - 0.573 + 2.000000) = 133.619
  Pos[13]: 0.676 × (605.933 - 0.561 + 2.000000) = 410.583
  Pos[14]: 0.130 × (605.933 - 0.078 + 2.000000) = 79.021
  Pos[15]: 0.269 × (605.933 - 0.087 + 2.000000) = 163.510
  Pos[16]: 0.446 × (605.933 - 0.166 + 2.000000) = 271.064
  Pos[17]: 0.275 × (605.933 - 0.437 + 2.000000) = 167.061
  Pos[18]: 0.458 × (605.933 - 0.184 + 2.000000) = 278.349
New position: ['12.143', '102.099', '403.877', '177.377', '320.296', '49.178', '31.593', '330.937', '14.590', '278.341', '233.681', '133.619', '410.583', '79.021', '163.510', '271.064', '167.061', '278.349']

Updating S2:
  Pos[1]: 0.517 × (605.933 - 0.889 + 2.000000) = 313.842
  Pos[2]: 0.424 × (605.933 - 0.549 + 2.000000) = 257.531
  Pos[3]: 0.994 × (605.933 - 0.371 + 2.000000) = 603.916
  Pos[4]: 0.694 × (605.933 - 0.795 + 2.000000) = 421.353
  Pos[5]: 0.631 × (605.933 - 0.837 + 2.000000) = 383.077
  Pos[6]: 0.081 × (605.933 - 0.524 + 2.000000) = 49.200
  Pos[7]: 0.809 × (605.933 - 0.012 + 2.000000) = 491.808
  Pos[8]: 0.184 × (605.933 - 0.764 + 2.000000) = 111.719
  Pos[9]: 0.539 × (605.933 - 0.134 + 2.000000) = 327.603
  Pos[10]: 0.059 × (605.933 - 0.815 + 2.000000) = 35.820
  Pos[11]: 0.751 × (605.933 - 0.514 + 2.000000) = 456.171
  Pos[12]: 0.964 × (605.933 - 0.121 + 2.000000) = 585.930
  Pos[13]: 0.653 × (605.933 - 0.149 + 2.000000) = 396.883
  Pos[14]: 0.183 × (605.933 - 0.805 + 2.000000) = 111.104
  Pos[15]: 0.473 × (605.933 - 0.251 + 2.000000) = 287.433
  Pos[16]: 0.850 × (605.933 - 0.914 + 2.000000) = 515.966
  Pos[17]: 0.292 × (605.933 - 0.316 + 2.000000) = 177.424
  Pos[18]: 0.177 × (605.933 - 0.249 + 2.000000) = 107.560
New position: ['313.842', '257.531', '603.916', '421.353', '383.077', '49.200', '491.808', '111.719', '327.603', '35.820', '456.171', '585.930', '396.883', '111.104', '287.433', '515.966', '177.424', '107.560']

All sardine positions updated!

================================================================================
ITERATION 1 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 605.933
- Sardines better than worst sailfish: 1

Replacement 1:
- Sardine S2 (fitness: 516.990) -> Sailfish SF1 (fitness: 605.933)

Replacement Summary: 1 replacements made

================================================================================
ITERATION 1 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 1 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 1 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 2
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.871 × 0.500000) - 0.500000 = 0.371000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - 0.371000 × ((0.407 × 610.249) - 0.800) = 425.141
  Pos[2]: 516.990 - 0.371000 × ((0.604 × 610.249) - 0.200) = 380.317
  Pos[3]: 516.990 - 0.371000 × ((0.933 × 610.249) - 0.599) = 305.979
  Pos[4]: 516.990 - 0.371000 × ((0.365 × 610.249) - 0.478) = 434.531
  Pos[5]: 516.990 - 0.371000 × ((0.791 × 610.249) - 0.161) = 337.966
  Pos[6]: 516.990 - 0.371000 × ((0.003 × 610.249) - 0.796) = 516.606
  Pos[7]: 516.990 - 0.371000 × ((0.327 × 610.249) - 0.371) = 443.094
  Pos[8]: 516.990 - 0.371000 × ((0.159 × 610.249) - 0.708) = 481.255
  Pos[9]: 516.990 - 0.371000 × ((0.537 × 610.249) - 0.028) = 395.423
  Pos[10]: 516.990 - 0.371000 × ((0.655 × 610.249) - 0.200) = 368.771
  Pos[11]: 516.990 - 0.371000 × ((0.373 × 610.249) - 0.969) = 432.902
  Pos[12]: 516.990 - 0.371000 × ((0.111 × 610.249) - 0.573) = 492.072
  Pos[13]: 516.990 - 0.371000 × ((0.680 × 610.249) - 0.561) = 363.245
  Pos[14]: 516.990 - 0.371000 × ((0.278 × 610.249) - 0.078) = 454.079
  Pos[15]: 516.990 - 0.371000 × ((0.999 × 610.249) - 0.087) = 290.847
  Pos[16]: 516.990 - 0.371000 × ((0.572 × 610.249) - 0.166) = 387.550
  Pos[17]: 516.990 - 0.371000 × ((0.153 × 610.249) - 0.437) = 482.513
  Pos[18]: 516.990 - 0.371000 × ((0.147 × 610.249) - 0.184) = 483.777
New position: ['425.141', '380.317', '305.979', '434.531', '337.966', '516.606', '443.094', '481.255', '395.423', '368.771', '432.902', '492.072', '363.245', '454.079', '290.847', '387.550', '482.513', '483.777']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.236 × (516.990 - 0.889 + 2.000000) = 122.272
  Pos[2]: 0.295 × (516.990 - 0.549 + 2.000000) = 152.940
  Pos[3]: 0.080 × (516.990 - 0.371 + 2.000000) = 41.490
  Pos[4]: 0.868 × (516.990 - 0.795 + 2.000000) = 449.793
  Pos[5]: 0.847 × (516.990 - 0.837 + 2.000000) = 438.876
  Pos[6]: 0.626 × (516.990 - 0.524 + 2.000000) = 324.560
  Pos[7]: 0.805 × (516.990 - 0.012 + 2.000000) = 417.777
  Pos[8]: 0.364 × (516.990 - 0.764 + 2.000000) = 188.634
  Pos[9]: 0.680 × (516.990 - 0.134 + 2.000000) = 352.822
  Pos[10]: 0.342 × (516.990 - 0.815 + 2.000000) = 177.216
  Pos[11]: 0.398 × (516.990 - 0.514 + 2.000000) = 206.354
  Pos[12]: 0.446 × (516.990 - 0.121 + 2.000000) = 231.416
  Pos[13]: 0.487 × (516.990 - 0.149 + 2.000000) = 252.676
  Pos[14]: 0.405 × (516.990 - 0.805 + 2.000000) = 209.865
  Pos[15]: 0.653 × (516.990 - 0.251 + 2.000000) = 338.737
  Pos[16]: 0.405 × (516.990 - 0.914 + 2.000000) = 209.821
  Pos[17]: 0.570 × (516.990 - 0.316 + 2.000000) = 295.644
  Pos[18]: 0.366 × (516.990 - 0.249 + 2.000000) = 189.859
New position: ['122.272', '152.940', '41.490', '449.793', '438.876', '324.560', '417.777', '188.634', '352.822', '177.216', '206.354', '231.416', '252.676', '209.865', '338.737', '209.821', '295.644', '189.859']

All sardine positions updated!

================================================================================
ITERATION 2 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 2 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 2 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 2 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 3
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.114 × 0.500000) - 0.500000 = -0.386000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - -0.386000 × ((0.620 × 610.249) - 0.800) = 662.726
  Pos[2]: 516.990 - -0.386000 × ((0.378 × 610.249) - 0.200) = 605.953
  Pos[3]: 516.990 - -0.386000 × ((0.121 × 610.249) - 0.599) = 545.261
  Pos[4]: 516.990 - -0.386000 × ((0.873 × 610.249) - 0.478) = 722.446
  Pos[5]: 516.990 - -0.386000 × ((0.942 × 610.249) - 0.161) = 738.822
  Pos[6]: 516.990 - -0.386000 × ((0.740 × 610.249) - 0.796) = 690.994
  Pos[7]: 516.990 - -0.386000 × ((0.253 × 610.249) - 0.371) = 576.443
  Pos[8]: 516.990 - -0.386000 × ((0.004 × 610.249) - 0.708) = 517.659
  Pos[9]: 516.990 - -0.386000 × ((0.413 × 610.249) - 0.028) = 614.264
  Pos[10]: 516.990 - -0.386000 × ((0.160 × 610.249) - 0.200) = 554.602
  Pos[11]: 516.990 - -0.386000 × ((0.538 × 610.249) - 0.969) = 643.345
  Pos[12]: 516.990 - -0.386000 × ((0.553 × 610.249) - 0.573) = 647.032
  Pos[13]: 516.990 - -0.386000 × ((0.794 × 610.249) - 0.561) = 703.805
  Pos[14]: 516.990 - -0.386000 × ((0.677 × 610.249) - 0.078) = 676.432
  Pos[15]: 516.990 - -0.386000 × ((0.227 × 610.249) - 0.087) = 570.428
  Pos[16]: 516.990 - -0.386000 × ((0.367 × 610.249) - 0.166) = 603.375
  Pos[17]: 516.990 - -0.386000 × ((0.129 × 610.249) - 0.437) = 547.208
  Pos[18]: 516.990 - -0.386000 × ((0.292 × 610.249) - 0.184) = 585.702
New position: ['662.726', '605.953', '545.261', '722.446', '738.822', '690.994', '576.443', '517.659', '614.264', '554.602', '643.345', '647.032', '703.805', '676.432', '570.428', '603.375', '547.208', '585.702']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.204 × (516.990 - 0.889 + 2.000000) = 105.693
  Pos[2]: 0.178 × (516.990 - 0.549 + 2.000000) = 92.283
  Pos[3]: 0.812 × (516.990 - 0.371 + 2.000000) = 421.119
  Pos[4]: 0.435 × (516.990 - 0.795 + 2.000000) = 225.415
  Pos[5]: 0.381 × (516.990 - 0.837 + 2.000000) = 197.416
  Pos[6]: 0.576 × (516.990 - 0.524 + 2.000000) = 298.637
  Pos[7]: 0.350 × (516.990 - 0.012 + 2.000000) = 181.642
  Pos[8]: 0.311 × (516.990 - 0.764 + 2.000000) = 161.168
  Pos[9]: 0.033 × (516.990 - 0.134 + 2.000000) = 17.122
  Pos[10]: 0.075 × (516.990 - 0.815 + 2.000000) = 38.863
  Pos[11]: 0.313 × (516.990 - 0.514 + 2.000000) = 162.283
  Pos[12]: 0.695 × (516.990 - 0.121 + 2.000000) = 360.614
  Pos[13]: 0.022 × (516.990 - 0.149 + 2.000000) = 11.415
  Pos[14]: 0.969 × (516.990 - 0.805 + 2.000000) = 502.122
  Pos[15]: 0.676 × (516.990 - 0.251 + 2.000000) = 350.668
  Pos[16]: 0.023 × (516.990 - 0.914 + 2.000000) = 11.916
  Pos[17]: 0.608 × (516.990 - 0.316 + 2.000000) = 315.354
  Pos[18]: 0.640 × (516.990 - 0.249 + 2.000000) = 331.994
New position: ['105.693', '92.283', '421.119', '225.415', '197.416', '298.637', '181.642', '161.168', '17.122', '38.863', '162.283', '360.614', '11.415', '502.122', '350.668', '11.916', '315.354', '331.994']

All sardine positions updated!

================================================================================
ITERATION 3 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 3 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 3 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 3 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 4
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.574 × 0.500000) - 0.500000 = 0.074000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - 0.074000 × ((0.409 × 610.249) - 0.800) = 498.580
  Pos[2]: 516.990 - 0.074000 × ((0.812 × 610.249) - 0.200) = 480.336
  Pos[3]: 516.990 - 0.074000 × ((0.602 × 610.249) - 0.599) = 489.849
  Pos[4]: 516.990 - 0.074000 × ((0.776 × 610.249) - 0.478) = 481.983
  Pos[5]: 516.990 - 0.074000 × ((0.529 × 610.249) - 0.161) = 493.113
  Pos[6]: 516.990 - 0.074000 × ((0.779 × 610.249) - 0.796) = 481.871
  Pos[7]: 516.990 - 0.074000 × ((0.483 × 610.249) - 0.371) = 495.206
  Pos[8]: 516.990 - 0.074000 × ((0.076 × 610.249) - 0.708) = 513.611
  Pos[9]: 516.990 - 0.074000 × ((0.892 × 610.249) - 0.028) = 476.711
  Pos[10]: 516.990 - 0.074000 × ((0.396 × 610.249) - 0.200) = 499.122
  Pos[11]: 516.990 - 0.074000 × ((0.081 × 610.249) - 0.969) = 513.404
  Pos[12]: 516.990 - 0.074000 × ((0.153 × 610.249) - 0.573) = 510.123
  Pos[13]: 516.990 - 0.074000 × ((0.274 × 610.249) - 0.561) = 504.658
  Pos[14]: 516.990 - 0.074000 × ((0.364 × 610.249) - 0.078) = 500.558
  Pos[15]: 516.990 - 0.074000 × ((0.242 × 610.249) - 0.087) = 506.068
  Pos[16]: 516.990 - 0.074000 × ((0.714 × 610.249) - 0.166) = 484.759
  Pos[17]: 516.990 - 0.074000 × ((0.026 × 610.249) - 0.437) = 515.848
  Pos[18]: 516.990 - 0.074000 × ((0.501 × 610.249) - 0.184) = 494.380
New position: ['498.580', '480.336', '489.849', '481.983', '493.113', '481.871', '495.206', '513.611', '476.711', '499.122', '513.404', '510.123', '504.658', '500.558', '506.068', '484.759', '515.848', '494.380']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.334 × (516.990 - 0.889 + 2.000000) = 173.046
  Pos[2]: 0.003 × (516.990 - 0.549 + 2.000000) = 1.555
  Pos[3]: 0.733 × (516.990 - 0.371 + 2.000000) = 380.148
  Pos[4]: 0.746 × (516.990 - 0.795 + 2.000000) = 386.574
  Pos[5]: 0.545 × (516.990 - 0.837 + 2.000000) = 282.394
  Pos[6]: 0.244 × (516.990 - 0.524 + 2.000000) = 126.506
  Pos[7]: 0.684 × (516.990 - 0.012 + 2.000000) = 354.981
  Pos[8]: 0.766 × (516.990 - 0.764 + 2.000000) = 396.961
  Pos[9]: 0.697 × (516.990 - 0.134 + 2.000000) = 361.643
  Pos[10]: 0.036 × (516.990 - 0.815 + 2.000000) = 18.654
  Pos[11]: 0.994 × (516.990 - 0.514 + 2.000000) = 515.365
  Pos[12]: 0.047 × (516.990 - 0.121 + 2.000000) = 24.387
  Pos[13]: 0.852 × (516.990 - 0.149 + 2.000000) = 442.053
  Pos[14]: 0.524 × (516.990 - 0.805 + 2.000000) = 271.529
  Pos[15]: 0.366 × (516.990 - 0.251 + 2.000000) = 189.859
  Pos[16]: 0.986 × (516.990 - 0.914 + 2.000000) = 510.823
  Pos[17]: 0.031 × (516.990 - 0.316 + 2.000000) = 16.079
  Pos[18]: 0.649 × (516.990 - 0.249 + 2.000000) = 336.663
New position: ['173.046', '1.555', '380.148', '386.574', '282.394', '126.506', '354.981', '396.961', '361.643', '18.654', '515.365', '24.387', '442.053', '271.529', '189.859', '510.823', '16.079', '336.663']

All sardine positions updated!

================================================================================
ITERATION 4 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 4 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 4 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 4 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 5
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.409 × 0.500000) - 0.500000 = -0.091000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - -0.091000 × ((0.838 × 610.249) - 0.800) = 563.454
  Pos[2]: 516.990 - -0.091000 × ((0.115 × 610.249) - 0.200) = 523.358
  Pos[3]: 516.990 - -0.091000 × ((0.478 × 610.249) - 0.599) = 543.480
  Pos[4]: 516.990 - -0.091000 × ((0.815 × 610.249) - 0.478) = 562.206
  Pos[5]: 516.990 - -0.091000 × ((0.108 × 610.249) - 0.161) = 522.973
  Pos[6]: 516.990 - -0.091000 × ((0.596 × 610.249) - 0.796) = 550.015
  Pos[7]: 516.990 - -0.091000 × ((0.196 × 610.249) - 0.371) = 527.841
  Pos[8]: 516.990 - -0.091000 × ((0.099 × 610.249) - 0.708) = 522.424
  Pos[9]: 516.990 - -0.091000 × ((0.608 × 610.249) - 0.028) = 550.752
  Pos[10]: 516.990 - -0.091000 × ((0.810 × 610.249) - 0.200) = 561.953
  Pos[11]: 516.990 - -0.091000 × ((0.247 × 610.249) - 0.969) = 530.619
  Pos[12]: 516.990 - -0.091000 × ((0.053 × 610.249) - 0.573) = 519.881
  Pos[13]: 516.990 - -0.091000 × ((0.935 × 610.249) - 0.561) = 568.862
  Pos[14]: 516.990 - -0.091000 × ((0.324 × 610.249) - 0.078) = 534.976
  Pos[15]: 516.990 - -0.091000 × ((0.336 × 610.249) - 0.087) = 535.641
  Pos[16]: 516.990 - -0.091000 × ((0.589 × 610.249) - 0.166) = 549.684
  Pos[17]: 516.990 - -0.091000 × ((0.103 × 610.249) - 0.437) = 522.670
  Pos[18]: 516.990 - -0.091000 × ((0.903 × 610.249) - 0.184) = 567.119
New position: ['563.454', '523.358', '543.480', '562.206', '522.973', '550.015', '527.841', '522.424', '550.752', '561.953', '530.619', '519.881', '568.862', '534.976', '535.641', '549.684', '522.670', '567.119']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.422 × (516.990 - 0.889 + 2.000000) = 218.639
  Pos[2]: 0.569 × (516.990 - 0.549 + 2.000000) = 294.993
  Pos[3]: 0.495 × (516.990 - 0.371 + 2.000000) = 256.717
  Pos[4]: 0.351 × (516.990 - 0.795 + 2.000000) = 181.887
  Pos[5]: 0.901 × (516.990 - 0.837 + 2.000000) = 466.856
  Pos[6]: 0.519 × (516.990 - 0.524 + 2.000000) = 269.084
  Pos[7]: 0.659 × (516.990 - 0.012 + 2.000000) = 342.007
  Pos[8]: 0.534 × (516.990 - 0.764 + 2.000000) = 276.733
  Pos[9]: 0.827 × (516.990 - 0.134 + 2.000000) = 429.094
  Pos[10]: 0.199 × (516.990 - 0.815 + 2.000000) = 103.117
  Pos[11]: 0.982 × (516.990 - 0.514 + 2.000000) = 509.144
  Pos[12]: 0.210 × (516.990 - 0.121 + 2.000000) = 108.963
  Pos[13]: 0.321 × (516.990 - 0.149 + 2.000000) = 166.548
  Pos[14]: 0.460 × (516.990 - 0.805 + 2.000000) = 238.365
  Pos[15]: 0.207 × (516.990 - 0.251 + 2.000000) = 107.379
  Pos[16]: 0.233 × (516.990 - 0.914 + 2.000000) = 120.712
  Pos[17]: 0.963 × (516.990 - 0.316 + 2.000000) = 499.483
  Pos[18]: 0.361 × (516.990 - 0.249 + 2.000000) = 187.266
New position: ['218.639', '294.993', '256.717', '181.887', '466.856', '269.084', '342.007', '276.733', '429.094', '103.117', '509.144', '108.963', '166.548', '238.365', '107.379', '120.712', '499.483', '187.266']

All sardine positions updated!

================================================================================
ITERATION 5 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 5 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 5 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 5 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 6
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.409 × 0.500000) - 0.500000 = -0.091000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - -0.091000 × ((0.331 × 610.249) - 0.800) = 535.299
  Pos[2]: 516.990 - -0.091000 × ((0.932 × 610.249) - 0.200) = 568.728
  Pos[3]: 516.990 - -0.091000 × ((0.718 × 610.249) - 0.599) = 556.808
  Pos[4]: 516.990 - -0.091000 × ((0.416 × 610.249) - 0.478) = 540.048
  Pos[5]: 516.990 - -0.091000 × ((0.348 × 610.249) - 0.161) = 536.301
  Pos[6]: 516.990 - -0.091000 × ((0.384 × 610.249) - 0.796) = 538.242
  Pos[7]: 516.990 - -0.091000 × ((0.831 × 610.249) - 0.371) = 563.104
  Pos[8]: 516.990 - -0.091000 × ((0.606 × 610.249) - 0.708) = 550.579
  Pos[9]: 516.990 - -0.091000 × ((0.895 × 610.249) - 0.028) = 566.689
  Pos[10]: 516.990 - -0.091000 × ((0.293 × 610.249) - 0.200) = 533.243
  Pos[11]: 516.990 - -0.091000 × ((0.638 × 610.249) - 0.969) = 552.332
  Pos[12]: 516.990 - -0.091000 × ((0.575 × 610.249) - 0.573) = 548.869
  Pos[13]: 516.990 - -0.091000 × ((0.223 × 610.249) - 0.561) = 529.323
  Pos[14]: 516.990 - -0.091000 × ((0.998 × 610.249) - 0.078) = 572.405
  Pos[15]: 516.990 - -0.091000 × ((0.048 × 610.249) - 0.087) = 519.648
  Pos[16]: 516.990 - -0.091000 × ((0.790 × 610.249) - 0.166) = 560.846
  Pos[17]: 516.990 - -0.091000 × ((0.773 × 610.249) - 0.437) = 559.877
  Pos[18]: 516.990 - -0.091000 × ((0.267 × 610.249) - 0.184) = 531.801
New position: ['535.299', '568.728', '556.808', '540.048', '536.301', '538.242', '563.104', '550.579', '566.689', '533.243', '552.332', '548.869', '529.323', '572.405', '519.648', '560.846', '559.877', '531.801']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.683 × (516.990 - 0.889 + 2.000000) = 353.863
  Pos[2]: 0.044 × (516.990 - 0.549 + 2.000000) = 22.811
  Pos[3]: 0.978 × (516.990 - 0.371 + 2.000000) = 507.210
  Pos[4]: 0.997 × (516.990 - 0.795 + 2.000000) = 516.641
  Pos[5]: 0.338 × (516.990 - 0.837 + 2.000000) = 175.136
  Pos[6]: 0.788 × (516.990 - 0.524 + 2.000000) = 408.551
  Pos[7]: 0.780 × (516.990 - 0.012 + 2.000000) = 404.803
  Pos[8]: 0.138 × (516.990 - 0.764 + 2.000000) = 71.515
  Pos[9]: 0.092 × (516.990 - 0.134 + 2.000000) = 47.735
  Pos[10]: 0.637 × (516.990 - 0.815 + 2.000000) = 330.078
  Pos[11]: 0.413 × (516.990 - 0.514 + 2.000000) = 214.131
  Pos[12]: 0.623 × (516.990 - 0.121 + 2.000000) = 323.256
  Pos[13]: 0.382 × (516.990 - 0.149 + 2.000000) = 198.197
  Pos[14]: 0.325 × (516.990 - 0.805 + 2.000000) = 168.410
  Pos[15]: 0.305 × (516.990 - 0.251 + 2.000000) = 158.215
  Pos[16]: 0.901 × (516.990 - 0.914 + 2.000000) = 466.787
  Pos[17]: 0.810 × (516.990 - 0.316 + 2.000000) = 420.126
  Pos[18]: 0.206 × (516.990 - 0.249 + 2.000000) = 106.861
New position: ['353.863', '22.811', '507.210', '516.641', '175.136', '408.551', '404.803', '71.515', '47.735', '330.078', '214.131', '323.256', '198.197', '168.410', '158.215', '466.787', '420.126', '106.861']

All sardine positions updated!

================================================================================
ITERATION 6 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 6 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 6 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 6 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990
================================================================================
ITERATION 7
================================================================================
Population Decline (PD) = 1 - (1 / 2) = 0.500000

Lambda Calculations:
SF1: λ_1 = (2 × 0.493 × 0.500000) - 0.500000 = -0.007000
FORMULA: SF[i] = elite_sailfish_fitness - lambda[k] × ((random × (elite_sailfish_fitness + injured_sardine_fitness)/2) - old_sailfish)
Elite Sailfish Fitness: 516.990
Injured Sardine Fitness: 703.507
ITERATION > 0: Using replacement-specific positions for updates...
SF1 was replaced by S2, using S2 position

Updating SF1:
  Pos[1]: 516.990 - -0.007000 × ((0.603 × 610.249) - 0.800) = 519.561
  Pos[2]: 516.990 - -0.007000 × ((0.688 × 610.249) - 0.200) = 519.928
  Pos[3]: 516.990 - -0.007000 × ((0.197 × 610.249) - 0.599) = 517.828
  Pos[4]: 516.990 - -0.007000 × ((0.596 × 610.249) - 0.478) = 519.533
  Pos[5]: 516.990 - -0.007000 × ((0.697 × 610.249) - 0.161) = 519.967
  Pos[6]: 516.990 - -0.007000 × ((0.542 × 610.249) - 0.796) = 519.300
  Pos[7]: 516.990 - -0.007000 × ((0.673 × 610.249) - 0.371) = 519.863
  Pos[8]: 516.990 - -0.007000 × ((0.854 × 610.249) - 0.708) = 520.633
  Pos[9]: 516.990 - -0.007000 × ((0.729 × 610.249) - 0.028) = 520.104
  Pos[10]: 516.990 - -0.007000 × ((0.736 × 610.249) - 0.200) = 520.133
  Pos[11]: 516.990 - -0.007000 × ((0.123 × 610.249) - 0.969) = 517.509
  Pos[12]: 516.990 - -0.007000 × ((0.168 × 610.249) - 0.573) = 517.704
  Pos[13]: 516.990 - -0.007000 × ((0.218 × 610.249) - 0.561) = 517.918
  Pos[14]: 516.990 - -0.007000 × ((0.798 × 610.249) - 0.078) = 520.399
  Pos[15]: 516.990 - -0.007000 × ((0.873 × 610.249) - 0.087) = 520.719
  Pos[16]: 516.990 - -0.007000 × ((0.929 × 610.249) - 0.166) = 520.958
  Pos[17]: 516.990 - -0.007000 × ((0.375 × 610.249) - 0.437) = 518.589
  Pos[18]: 516.990 - -0.007000 × ((0.998 × 610.249) - 0.184) = 521.252
New position: ['519.561', '519.928', '517.828', '519.533', '519.967', '519.300', '519.863', '520.633', '520.104', '520.133', '517.509', '517.704', '517.918', '520.399', '520.719', '520.958', '518.589', '521.252']

All sailfish positions updated!

FORMULA: S[i] = random × (elite_sailfish_fitness - old_sardine + AP)
Elite Sailfish Fitness: 516.990
Updating ALL sardines:

Updating S1:
  Pos[1]: 0.461 × (516.990 - 0.889 + 2.000000) = 238.845
  Pos[2]: 0.503 × (516.990 - 0.549 + 2.000000) = 260.776
  Pos[3]: 0.183 × (516.990 - 0.371 + 2.000000) = 94.907
  Pos[4]: 0.462 × (516.990 - 0.795 + 2.000000) = 239.406
  Pos[5]: 0.617 × (516.990 - 0.837 + 2.000000) = 319.701
  Pos[6]: 0.406 × (516.990 - 0.524 + 2.000000) = 210.497
  Pos[7]: 0.889 × (516.990 - 0.012 + 2.000000) = 461.372
  Pos[8]: 0.277 × (516.990 - 0.764 + 2.000000) = 143.549
  Pos[9]: 0.515 × (516.990 - 0.134 + 2.000000) = 267.211
  Pos[10]: 0.980 × (516.990 - 0.815 + 2.000000) = 507.812
  Pos[11]: 0.838 × (516.990 - 0.514 + 2.000000) = 434.483
  Pos[12]: 0.764 × (516.990 - 0.121 + 2.000000) = 396.416
  Pos[13]: 0.133 × (516.990 - 0.149 + 2.000000) = 69.006
  Pos[14]: 0.542 × (516.990 - 0.805 + 2.000000) = 280.856
  Pos[15]: 0.816 × (516.990 - 0.251 + 2.000000) = 423.291
  Pos[16]: 0.218 × (516.990 - 0.914 + 2.000000) = 112.941
  Pos[17]: 1.000 × (516.990 - 0.316 + 2.000000) = 518.674
  Pos[18]: 0.234 × (516.990 - 0.249 + 2.000000) = 121.385
New position: ['238.845', '260.776', '94.907', '239.406', '319.701', '210.497', '461.372', '143.549', '267.211', '507.812', '434.483', '396.416', '69.006', '280.856', '423.291', '112.941', '518.674', '121.385']

All sardine positions updated!

================================================================================
ITERATION 7 - STEP 4: SAILFISH-SARDINE REPLACEMENT
================================================================================
Analysis:
- Worst sailfish fitness: 516.990
- Sardines better than worst sailfish: 0
- No replacement will occur

================================================================================
ITERATION 7 - STEP 1: GENERATING NEW ROUTES
================================================================================
SAILFISH Routes:

===== SF1 ====================================================
Random values: [0.8, 0.2, 0.599, 0.478, 0.161, 0.796, 0.371, 0.708, 0.028, 0.2, 0.969, 0.573, 0.561, 0.078, 0.087, 0.166, 0.437, 0.184]
Routes (with depot returns): Route1: 0-9-14-15-0  Route2: 0-5-16-18-2-10-0  Route3: 0-7-17-4-13-12-3-0  
Route1 demand: 82.0/100.0
Route2 demand: 90.0/100.0
Route3 demand: 98.0/100.0

SARDINE Routes:

===== S1 ====================================================
Random values: [0.889, 0.549, 0.371, 0.795, 0.837, 0.524, 0.012, 0.764, 0.134, 0.815, 0.514, 0.121, 0.149, 0.805, 0.251, 0.914, 0.316, 0.249]
Routes (with depot returns): Route1: 0-7-12-9-13-18-0  Route2: 0-15-17-3-11-6-2-8-0  Route3: 0-4-14-10-5-1-0  
Route1 demand: 99.0/100.0
Route2 demand: 95.0/100.0
Route3 demand: 75.0/100.0

================================================================================
ITERATION 7 - STEP 3: FITNESS SUMMARY
================================================================================
SAILFISH FITNESS SCORES:
------------------------------
SF1: 516.990 ⭐ BEST

SARDINE FITNESS SCORES:
-------------------------
S1: 703.507 ⭐ BEST

OVERALL SUMMARY:
--------------------
Best Sailfish Fitness: 516.990
Best Sardine Fitness: 703.507
Overall Best Fitness: 516.990
Best Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

========================================================================================================================
ITERATION 7 - COMPREHENSIVE RESULTS TABLE
========================================================================================================================
ID   Random Values                  Routes                                   Fitness   
------------------------------------------------------------------------------------------------------------------------
SF1  ['0.800', '0.200', '0.599', '0.478', '0.161', '0.796', '0.371', '0.708', '0.028', '0.200', '0.969', '0.573', '0.561', '0.078', '0.087', '0.166', '0.437', '0.184'] [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]] 516.990    🎯
S1   ['0.889', '0.549', '0.371', '0.795', '0.837', '0.524', '0.012', '0.764', '0.134', '0.815', '0.514', '0.121', '0.149', '0.805', '0.251', '0.914', '0.316', '0.249'] [[7, 12, 9, 13, 18], [15, 17, 3, 11, 6, 2, 8], [4, 14, 10, 5, 1]] 703.507   

Best Solution: 516.990

====================================================================================================
FINAL VRP OPTIMIZATION RESULTS
====================================================================================================
Algorithm Parameters:
- N Sailfish: 1
- N Sardines: 2
- Max Iter: 7
- A: 4.0
- Epsilon: 0.001

VRP Parameters:
- Max Capacity: 100.0
- Max Vehicles: 3
- Problem Size: 18
- Data File: kecil.csv

Best Solution:
- Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]
- Total Distance: 516.990


====================================================================================================
🚚 DETAILED ROUTE ANALYSIS - VEHICLE FLOW EXPLANATION
====================================================================================================
📍 DEPOT LOCATION: (30.0, 40.0)

🚛 VEHICLE 1 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 82.0/100.0 (82.0% capacity used)
👥 Customers to visit: 3

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 9 (68.0, 29.0)
            Distance: 39.560 units
            Deliver demand: 24.0 units
            Remaining capacity: 76.0 units
   Step 3: Travel to Customer 14 (61.0, 78.0)
            Distance: 49.497 units
            Deliver demand: 26.0 units
            Remaining capacity: 50.0 units
   Step 4: Travel to Customer 15 (63.0, 63.0)
            Distance: 15.133 units
            Deliver demand: 32.0 units
            Remaining capacity: 18.0 units
   Step 5: Return to DEPOT (30.0, 40.0)
            Distance: 40.224 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 1 SUMMARY:
   Total distance: 144.415 units
   Customers served: 3
   Demand delivered: 82.0 units
   Route efficiency: 0.568 units/distance

🚛 VEHICLE 2 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 90.0/100.0 (90.0% capacity used)
👥 Customers to visit: 5

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 5 (47.0, 24.0)
            Distance: 23.345 units
            Deliver demand: 19.0 units
            Remaining capacity: 81.0 units
   Step 3: Travel to Customer 16 (54.0, 53.0)
            Distance: 29.833 units
            Deliver demand: 31.0 units
            Remaining capacity: 50.0 units
   Step 4: Travel to Customer 18 (48.0, 37.0)
            Distance: 17.088 units
            Deliver demand: 23.0 units
            Remaining capacity: 27.0 units
   Step 5: Travel to Customer 2 (49.0, 48.0)
            Distance: 11.045 units
            Deliver demand: 10.0 units
            Remaining capacity: 17.0 units
   Step 6: Travel to Customer 10 (65.0, 29.0)
            Distance: 24.839 units
            Deliver demand: 7.0 units
            Remaining capacity: 10.0 units
   Step 7: Return to DEPOT (30.0, 40.0)
            Distance: 36.688 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 2 SUMMARY:
   Total distance: 142.839 units
   Customers served: 5
   Demand delivered: 90.0 units
   Route efficiency: 0.630 units/distance

🚛 VEHICLE 3 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 98.0/100.0 (98.0% capacity used)
👥 Customers to visit: 6

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 7 (26.0, 41.0)
            Distance: 4.123 units
            Deliver demand: 11.0 units
            Remaining capacity: 89.0 units
   Step 3: Travel to Customer 17 (36.0, 21.0)
            Distance: 22.361 units
            Deliver demand: 7.0 units
            Remaining capacity: 82.0 units
   Step 4: Travel to Customer 4 (64.0, 52.0)
            Distance: 41.773 units
            Deliver demand: 16.0 units
            Remaining capacity: 66.0 units
   Step 5: Travel to Customer 13 (20.0, 68.0)
            Distance: 46.819 units
            Deliver demand: 35.0 units
            Remaining capacity: 31.0 units
   Step 6: Travel to Customer 12 (47.0, 71.0)
            Distance: 27.166 units
            Deliver demand: 6.0 units
            Remaining capacity: 25.0 units
   Step 7: Travel to Customer 3 (77.0, 73.0)
            Distance: 30.067 units
            Deliver demand: 23.0 units
            Remaining capacity: 2.0 units
   Step 8: Return to DEPOT (30.0, 40.0)
            Distance: 57.428 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 3 SUMMARY:
   Total distance: 229.737 units
   Customers served: 6
   Demand delivered: 98.0 units
   Route efficiency: 0.427 units/distance

====================================================================================================
🎯 OVERALL OPTIMIZATION SUMMARY
====================================================================================================
Total distance traveled by all vehicles: 516.990 units
Total customers served: 14
Total demand delivered: 270.0 units
Vehicles used: 3/3
Average distance per vehicle: 172.330 units
====================================================================================================

Summary:
- Total customers served: 14/18
- Total demand served: 270.0
- Number of vehicles used: 3/3

Fitness Evolution:
- Initial: 516.990
- Final: 516.990
- Improvement: 0.000
- History: ['516.990', '516.990', '516.990', '516.990', '516.990', '516.990', '516.990', '516.990']

====================================================================================================
VRP OPTIMIZATION COMPLETED!
====================================================================================================

Optimization completed at: 2025-09-29 15:30:01

================================================================================
OPTIMIZATION RESULTS SUMMARY
================================================================================
Algorithm Parameters:
  N Sailfish: 1
  N Sardines: 2
  Max Iter: 7
  A: 4.0
  Epsilon: 0.001

VRP Parameters:
  Max Capacity: 100.0
  Max Vehicles: 3
  Problem Size: 18
  Data File: kecil.csv

Best Solution:
  Total Distance: 516.990
  Routes: [[9, 14, 15], [5, 16, 18, 2, 10], [7, 17, 4, 13, 12, 3]]

Fitness Evolution:
  Initial Fitness: 516.990
  Final Fitness: 516.990
  Improvement: 0.000
================================================================================
Successfully loaded data from kecil.csv
Depot: ID=0, X=30.0, Y=40.0, Demand=0.0
Customers: 18 customers loaded

====================================================================================================
🚚 DETAILED ROUTE ANALYSIS - VEHICLE FLOW EXPLANATION
====================================================================================================
📍 DEPOT LOCATION: (30.0, 40.0)

🚛 VEHICLE 1 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 82.0/100.0 (82.0% capacity used)
👥 Customers to visit: 3

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 9 (68.0, 29.0)
            Distance: 39.560 units
            Deliver demand: 24.0 units
            Remaining capacity: 76.0 units
   Step 3: Travel to Customer 14 (61.0, 78.0)
            Distance: 49.497 units
            Deliver demand: 26.0 units
            Remaining capacity: 50.0 units
   Step 4: Travel to Customer 15 (63.0, 63.0)
            Distance: 15.133 units
            Deliver demand: 32.0 units
            Remaining capacity: 18.0 units
   Step 5: Return to DEPOT (30.0, 40.0)
            Distance: 40.224 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 1 SUMMARY:
   Total distance: 144.415 units
   Customers served: 3
   Demand delivered: 82.0 units
   Route efficiency: 0.568 units/distance

🚛 VEHICLE 2 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 90.0/100.0 (90.0% capacity used)
👥 Customers to visit: 5

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 5 (47.0, 24.0)
            Distance: 23.345 units
            Deliver demand: 19.0 units
            Remaining capacity: 81.0 units
   Step 3: Travel to Customer 16 (54.0, 53.0)
            Distance: 29.833 units
            Deliver demand: 31.0 units
            Remaining capacity: 50.0 units
   Step 4: Travel to Customer 18 (48.0, 37.0)
            Distance: 17.088 units
            Deliver demand: 23.0 units
            Remaining capacity: 27.0 units
   Step 5: Travel to Customer 2 (49.0, 48.0)
            Distance: 11.045 units
            Deliver demand: 10.0 units
            Remaining capacity: 17.0 units
   Step 6: Travel to Customer 10 (65.0, 29.0)
            Distance: 24.839 units
            Deliver demand: 7.0 units
            Remaining capacity: 10.0 units
   Step 7: Return to DEPOT (30.0, 40.0)
            Distance: 36.688 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 2 SUMMARY:
   Total distance: 142.839 units
   Customers served: 5
   Demand delivered: 90.0 units
   Route efficiency: 0.630 units/distance

🚛 VEHICLE 3 ROUTE ANALYSIS
------------------------------------------------------------
📦 Route Demand: 98.0/100.0 (98.0% capacity used)
👥 Customers to visit: 6

🔄 ROUTE FLOW:
   Step 1: Vehicle starts at DEPOT (30.0, 40.0)
            Initial capacity: 100.0 units
   Step 2: Travel to Customer 7 (26.0, 41.0)
            Distance: 4.123 units
            Deliver demand: 11.0 units
            Remaining capacity: 89.0 units
   Step 3: Travel to Customer 17 (36.0, 21.0)
            Distance: 22.361 units
            Deliver demand: 7.0 units
            Remaining capacity: 82.0 units
   Step 4: Travel to Customer 4 (64.0, 52.0)
            Distance: 41.773 units
            Deliver demand: 16.0 units
            Remaining capacity: 66.0 units
   Step 5: Travel to Customer 13 (20.0, 68.0)
            Distance: 46.819 units
            Deliver demand: 35.0 units
            Remaining capacity: 31.0 units
   Step 6: Travel to Customer 12 (47.0, 71.0)
            Distance: 27.166 units
            Deliver demand: 6.0 units
            Remaining capacity: 25.0 units
   Step 7: Travel to Customer 3 (77.0, 73.0)
            Distance: 30.067 units
            Deliver demand: 23.0 units
            Remaining capacity: 2.0 units
   Step 8: Return to DEPOT (30.0, 40.0)
            Distance: 57.428 units
            Vehicle unloaded and ready for next route

📊 VEHICLE 3 SUMMARY:
   Total distance: 229.737 units
   Customers served: 6
   Demand delivered: 98.0 units
   Route efficiency: 0.427 units/distance

====================================================================================================
🎯 OVERALL OPTIMIZATION SUMMARY
====================================================================================================
Total distance traveled by all vehicles: 516.990 units
Total customers served: 14
Total demand delivered: 270.0 units
Vehicles used: 3/3
Average distance per vehicle: 172.330 units
====================================================================================================
